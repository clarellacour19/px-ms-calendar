{
	"info": {
		"_postman_id": "04af4c04-9e47-4a1a-be38-381226c46eac",
		"name": "newman-calendarorganizer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1246236"
	},
	"item": [
		{
			"name": "crm-registration-en-us",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentDate = new Date();",
							"var currentTime = currentDate.getTime();",
							"// change emailAddr to TimeStamp",
							"var emailAddr = \"proxqa_\"+currentTime+\"@endtest-mail.io\";",
							"",
							"",
							"console.log(\"Email Address \" + emailAddr);",
							"pm.environment.set(\"userEmailAddress\", emailAddr); //update environment email address"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// The script below is generated by PX QA Engineer for testing purposes",
							"",
							"var data = JSON.parse(responseBody);",
							"// Verifying basic API status",
							"tests[\"Verify Result Response is OK\"] = data.result === \"OK\";",
							"console.log(\"Result Response is:  \" + data.result);",
							"tests[\"Verify no Exception occured\"] = data.exception === null;",
							"console.log(\"Exception Response is:  \" + data.exception);",
							"",
							"",
							"// Verifying User Access",
							"tests[\"Verify Access Token is provided\"] = data.data.access_token !== \"\" &&  data.data.access_token !== null;",
							"console.log(\"Access Token is: \" + data.data.access_token);",
							"pm.environment.set(\"accessToken\", data.data.access_token);",
							"",
							"// Verifying some basic user Data",
							"tests[\"Verify Consumer ID is not Null or Empty\"] = data.data.capture_user.consumerID !== \"\" && data.data.capture_user.consumerID !== null;",
							"console.log(\"Consumer ID is: \" + data.data.capture_user.consumerID);",
							"pm.environment.set(\"consumerID\", data.data.capture_user.consumerID);",
							"tests[\"Verify UUID is not Null or Empty\"] = data.data.capture_user.uuid !== \"\" && data.data.capture_user.uuid !== null;",
							"console.log(\"UUID is: \" + data.data.capture_user.uuid);",
							"pm.environment.set(\"uuID\", data.data.capture_user.uuid);",
							"",
							"// End of Test Script"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apikey}}"
					},
					{
						"key": "Cache-Control",
						"value": "no-store"
					},
					{
						"key": "Origin",
						"value": "pgsitecore.com",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"locale\": \"en-US\",\n\t\"formType\": \"Registration\",\n\t\"Params\": {\n\t\t\"firstName\": \"PXuser\",\n\t\t\"globalOpt_optVersion\": 1,\n\t\t\"dependentBirthday\": \"2021-01-01\",\n\t\t\"emailAddress\": \"{{userEmailAddress}}\",\n\t\t\"newPassword\": \"Testing123\",\n\t\t\"globalOpt_optStatus\" : true,\n\t\t\"globalOpt_optId\": \"128_03\",\n\t\t\"locale\": \"en-US\"\n\t}\n}"
				},
				"url": {
					"raw": "https://{{Url}}.azure-api.net/crm/api/crm",
					"protocol": "https",
					"host": [
						"{{Url}}",
						"azure-api",
						"net"
					],
					"path": [
						"crm",
						"api",
						"crm"
					]
				}
			},
			"response": []
		},
		{
			"name": "calorg-generate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"// Verifying basic API status",
							"tests[\"Verify Result Response is OK\"] = data.result === \"OK\";",
							"console.log(\"Result Response is:  \" + data.result);",
							"tests[\"Verify no Exception occured\"] = data.exception === null;",
							"console.log(\"Exception Response is:  \" + data.exception);",
							"",
							"// verify all properties under data contains value",
							"Object.getOwnPropertyNames(data.data).forEach(dataPropElement => {",
							"    console.log(`Verify ${dataPropElement} is not null or empty`);",
							"    tests[`Verify ${dataPropElement} is not null or empty`] = data.data[dataPropElement] !== null && data.data[dataPropElement] !== \"\";",
							"    if (dataPropElement === \"cdnUrl\") {",
							"        console.log(`Verify c.ics extension is present in cdnUrl ${data.data[dataPropElement]}`);",
							"        tests[`Verify cdnUrl contains .ics extension`] = data.data[dataPropElement].includes(\".ics\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apikey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"locale\": \"en-US\",\n  \"uuidHash\": \"{{uuid}}\",\n  \"dueDate\": \"02/02/2055\",\n  \"access_token\": \"{{accessToken}}\"\n}"
				},
				"url": {
					"raw": "https://{{Url}}.azure-api.net/calendarorg/api/Calendar/GenerateCalendar",
					"protocol": "https",
					"host": [
						"{{Url}}",
						"azure-api",
						"net"
					],
					"path": [
						"calendarorg",
						"api",
						"Calendar",
						"GenerateCalendar"
					]
				}
			},
			"response": []
		},
		{
			"name": "calorg-get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"// Verifying basic API status",
							"tests[\"Verify Result Response is OK\"] = data.result === \"OK\";",
							"console.log(\"Result Response is:  \" + data.result);",
							"tests[\"Verify no Exception occured\"] = data.exception === null;",
							"console.log(\"Exception Response is:  \" + data.exception);",
							"",
							"// verify all properties under data contains value",
							"Object.getOwnPropertyNames(data.data.calendar[0]).forEach(dataPropElement => {",
							"    console.log(`Verify ${dataPropElement} is not null or empty`);",
							"    tests[`Verify ${dataPropElement} is not null or empty`] = data.data.calendar[0][dataPropElement] !== null && data.data[dataPropElement] !== \"\";",
							"    if (dataPropElement === \"cdnUrl\") {",
							"        console.log(`Verify c.ics extension is present in cdnUrl ${data.data.calendar[0][dataPropElement]}`);",
							"        tests[`Verify cdnUrl contains .ics extension`] = data.data.calendar[0][dataPropElement].includes(\".ics\");",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{apikey}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"locale\": \"en-US\",\n  \"uuidHash\": \"{{uuid}}\",\n  \"limit\": 0,\n  \"sorting\": \"\",\n  \"access_token\": \"{{accessToken}}\"\n}"
				},
				"url": {
					"raw": "https://{{Url}}.azure-api.net/calendarorg/api/Calendar/GetUserCalendar",
					"protocol": "https",
					"host": [
						"{{Url}}",
						"azure-api",
						"net"
					],
					"path": [
						"calendarorg",
						"api",
						"Calendar",
						"GetUserCalendar"
					]
				}
			},
			"response": []
		}
	]
}